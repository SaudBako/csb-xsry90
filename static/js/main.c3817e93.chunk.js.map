{"version":3,"sources":["components/FormDialog.js","components/Dialogs/validation.js","components/FormikTextField.js","components/Dialogs/ForgotPasswordDialog.js","components/Dialogs/LoginDialog.js","components/Dialogs/SignupDialog.js","components/AuthSection.js","App.js","index.js"],"names":["FormDialog","_ref","title","open","onClose","onSubmit","children","React","createElement","Dialog","DialogTitle","Container","noValidate","autoComplete","Children","map","child","Fragment","Box","height","Button","color","variant","type","nameValidation","yup","max","required","emailValidation","email","passwordValidation","min","matches","confirmPasswordValidation","test","value","this","parent","password","FormikTextField","label","name","formik","TextField","fullWidth","values","onChange","handleChange","onBlur","handleBlur","error","touched","Boolean","errors","helperText","ForgotPasswordDialog","useFormik","initialValues","validationSchema","alert","JSON","stringify","handleSubmit","LoginDialog","onLoggedIn","_useState","useState","_useState2","_slicedToArray","reset","setReset","rememberMe","FormControlLabel","control","Checkbox","checked","onClick","confirmPassword","SignupDialog","AuthSection","loggedIn","setLoggedIn","LoggedIn","onLoggedOut","NotLoggedIn","Typography","ButtonGroup","_ref2","_useState3","_useState4","process","setProcess","endIcon","KeyboardArrowRight","App","useEffect","document","display","flexDirection","justifyContent","alignItems","startIcon","GitHub","rootElement","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c3817e93.chunk.js","sourcesContent":["import React, { Children } from \"react\";\r\nimport { Box, Dialog, DialogTitle, Container, Button } from \"@material-ui/core\";\r\n\r\nexport default function FormDialog({\r\n  title,\r\n  open,\r\n  onClose,\r\n  onSubmit,\r\n  children\r\n}) {\r\n  return (\r\n    <Dialog onClose={onClose} open={open}>\r\n      <DialogTitle>{title}</DialogTitle>\r\n      <Container>\r\n        <form onSubmit={onSubmit} noValidate autoComplete=\"off\">\r\n          {Children.map(children, (child) => {\r\n            return (\r\n              <>\r\n                {child}\r\n                <Box height=\"12px\" />\r\n              </>\r\n            );\r\n          })}\r\n\r\n          <Button color=\"primary\" variant=\"contained\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n\r\n          <Box height=\"24px\" />\r\n        </form>\r\n      </Container>\r\n    </Dialog>\r\n  );\r\n}\r\n","import * as yup from \"yup\";\r\n\r\nexport const nameValidation = yup.string(\"Enter your name\").max(50).required();\r\n\r\nexport const emailValidation = yup\r\n  .string(\"Enter your email\")\r\n  .email()\r\n  .required();\r\n\r\nexport const passwordValidation = yup\r\n  .string(\"Enter your password\")\r\n  .min(8)\r\n  .matches(\r\n    \"^(?=.*[A-Za-z])(?=.*\\\\d)(?=.*[@$!%*#?&])\",\r\n    \"Must contain a letter, a number, and a special character\"\r\n  )\r\n  .required();\r\n\r\nexport const confirmPasswordValidation = yup\r\n  .string()\r\n  .test(\"passwords-match\", \"Passwords must match\", function (value) {\r\n    return this.parent.password === value;\r\n  });\r\n","import React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\nexport default function FormikTextField({ label, name, type, formik }) {\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      variant=\"outlined\"\r\n      required\r\n      name={name}\r\n      label={label}\r\n      type={type}\r\n      value={formik.values[name]}\r\n      onChange={formik.handleChange}\r\n      onBlur={formik.handleBlur}\r\n      error={formik.touched[name] && Boolean(formik.errors[name])}\r\n      helperText={formik.touched[name] && formik.errors[name]}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nimport FormDialog from \"../FormDialog\";\r\nimport { emailValidation } from \"./validation\";\r\nimport FormikTextField from \"../FormikTextField\";\r\n\r\nexport default function ForgotPasswordDialog({ open, onClose }) {\r\n  const formik = useFormik({\r\n    initialValues: { email: \"\" },\r\n    validationSchema: yup.object({ email: emailValidation }),\r\n    onSubmit: (values) => {\r\n      alert(JSON.stringify(values));\r\n    }\r\n  });\r\n\r\n  return (\r\n    <FormDialog\r\n      title=\"Reset password\"\r\n      open={open}\r\n      onClose={onClose}\r\n      onSubmit={formik.handleSubmit}\r\n    >\r\n      <FormikTextField\r\n        label=\"Email\"\r\n        name=\"email\"\r\n        type=\"email\"\r\n        formik={formik}\r\n      />\r\n    </FormDialog>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Button, Checkbox, FormControlLabel } from \"@material-ui/core\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nimport FormDialog from \"../FormDialog\";\r\nimport { emailValidation, passwordValidation } from \"./validation\";\r\nimport FormikTextField from \"../FormikTextField\";\r\nimport ForgotPasswordDialog from \"./ForgotPasswordDialog\";\r\n\r\nconst validationSchema = yup.object({\r\n  email: emailValidation,\r\n  password: passwordValidation\r\n});\r\n\r\nexport default function LoginDialog({ open, onClose, onLoggedIn }) {\r\n  const [reset, setReset] = useState(false);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n      rememberMe: false\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      alert(JSON.stringify(values));\r\n      onLoggedIn();\r\n    }\r\n  });\r\n\r\n  return (\r\n    <FormDialog\r\n      title=\"Login\"\r\n      open={open}\r\n      onClose={onClose}\r\n      onSubmit={formik.handleSubmit}\r\n    >\r\n      <FormikTextField\r\n        label=\"Email\"\r\n        name=\"email\"\r\n        type=\"email\"\r\n        formik={formik}\r\n      />\r\n\r\n      <FormikTextField\r\n        label=\"Password\"\r\n        name=\"password\"\r\n        type=\"password\"\r\n        formik={formik}\r\n      />\r\n\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={formik.values.rememberMe}\r\n            onChange={formik.handleChange}\r\n            name=\"rememberMe\"\r\n          />\r\n        }\r\n        label=\"Remember me\"\r\n      />\r\n      <Button onClick={() => setReset(true)}>Forgot password?</Button>\r\n      <ForgotPasswordDialog open={reset} onClose={() => setReset(false)} />\r\n    </FormDialog>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\n\r\nimport FormDialog from \"../FormDialog\";\r\nimport FormikTextField from \"../FormikTextField\";\r\nimport {\r\n  nameValidation,\r\n  emailValidation,\r\n  passwordValidation,\r\n  confirmPasswordValidation\r\n} from \"./validation\";\r\n\r\nconst validationSchema = yup.object({\r\n  name: nameValidation,\r\n  email: emailValidation,\r\n  password: passwordValidation,\r\n  confirmPassword: confirmPasswordValidation\r\n});\r\n\r\nexport default function SignupDialog({ open, onClose, onLoggedIn }) {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\"\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      alert(JSON.stringify(values));\r\n      onLoggedIn();\r\n    }\r\n  });\r\n\r\n  return (\r\n    <FormDialog\r\n      title=\"Sign up\"\r\n      open={open}\r\n      onClose={onClose}\r\n      onSubmit={formik.handleSubmit}\r\n    >\r\n      <FormikTextField name=\"name\" type=\"name\" label=\"Name\" formik={formik} />\r\n      <FormikTextField\r\n        name=\"email\"\r\n        type=\"email\"\r\n        label=\"Email\"\r\n        formik={formik}\r\n      />\r\n      <FormikTextField\r\n        name=\"password\"\r\n        type=\"password\"\r\n        label=\"Password\"\r\n        formik={formik}\r\n      />\r\n      <FormikTextField\r\n        name=\"confirmPassword\"\r\n        type=\"password\"\r\n        label=\"Confirm password\"\r\n        formik={formik}\r\n      />\r\n    </FormDialog>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Box, Button, ButtonGroup, Typography } from \"@material-ui/core\";\r\nimport { KeyboardArrowRight } from \"@material-ui/icons\";\r\nimport LoginDialog from \"./Dialogs/LoginDialog\";\r\nimport SignupDialog from \"./Dialogs/SignupDialog\";\r\n\r\nexport default function AuthSection() {\r\n  const [loggedIn, setLoggedIn] = useState(true);\r\n\r\n  return (\r\n    <>\r\n      {loggedIn ? (\r\n        <LoggedIn onLoggedOut={() => setLoggedIn(false)} />\r\n      ) : (\r\n        <NotLoggedIn onLoggedIn={() => setLoggedIn(true)} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction LoggedIn({ onLoggedOut }) {\r\n  return (\r\n    <>\r\n      <Typography>Hi Jassir!</Typography>\r\n      <Typography color=\"textSecondary\">example@example.com</Typography>\r\n\r\n      <Box height=\"24px\" />\r\n\r\n      <ButtonGroup>\r\n        <Button>Resend verification</Button>\r\n        <Button color=\"secondary\" onClick={onLoggedOut}>\r\n          Log out\r\n        </Button>\r\n      </ButtonGroup>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction NotLoggedIn({ onLoggedIn }) {\r\n  const [process, setProcess] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <ButtonGroup>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => setProcess(\"signup\")}\r\n        >\r\n          Sign up\r\n        </Button>\r\n\r\n        <Button\r\n          onClick={() => setProcess(\"login\")}\r\n          endIcon={<KeyboardArrowRight />}\r\n        >\r\n          Login\r\n        </Button>\r\n      </ButtonGroup>\r\n\r\n      <LoginDialog\r\n        open={process === \"login\"}\r\n        onClose={() => setProcess(\"\")}\r\n        onLoggedIn={onLoggedIn}\r\n      />\r\n\r\n      <SignupDialog\r\n        open={process === \"signup\"}\r\n        onClose={() => setProcess(\"\")}\r\n        onLoggedIn={onLoggedIn}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\nimport { Typography, Button, Box } from \"@material-ui/core\";\nimport { GitHub } from \"@material-ui/icons\";\nimport AuthSection from \"./components/AuthSection\";\n\nexport default function App() {\n  useEffect(() => {\n    document.title = \"Saud Bako's big task\";\n  }, []);\n\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      height=\"100vh\"\n    >\n      <Typography variant=\"h6\" color=\"textSecondary\">\n        Saud Bakolka's\n      </Typography>\n      <Typography variant=\"h3\" color=\"primary\">\n        Big Task\n      </Typography>\n\n      <Box height=\"24px\"></Box>\n\n      <Button startIcon={<GitHub />}>Source code</Button>\n\n      <Box height=\"24px\"></Box>\n\n      <AuthSection />\n    </Box>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}